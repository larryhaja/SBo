slibtool is an independent reimplementation of the widely used libtool,
written in C. slibtool is designed to be a clean, fast, easy-to-use.
slibtool maintains compatibility with libtool in nearly every aspect of
the tool's functionality as well as semantics, leaving out (or turning
into a no-op) only a small number of features that are no longer needed
on modern systems.

This does not conflict with GNU libtool included with Slackware.

To use slibtool instead of libtool export this to your environment.
  export MAKEFLAGS='LIBTOOL=slibtool'
or you can build only shared libraries:
  export MAKEFLAGS='LIBTOOL=slibtool-shared'
or only static libraries:
  export MAKEFLAGS='LIBTOOL=slibtool-static'

slibtool may build packages that are not compatible with GNU libtool.
For compatibility, use clibtool instead of slibtool:
  export MAKEFLAGS='LIBTOOL=clibtool'
or, for only shared libraries:
  export MAKEFLAGS='LIBTOOL=clibtool-shared'
or, for only static libraries:
  export MAKEFLAGS='LIBTOOL=clibtool-static'

If a build with libtool fails because of missing libtool library files
(.la), the package with the missing files can be rebuilt with clibtool
as above.

To use slibtool in a more verbose debug mode:
  export MAKEFLAGS='LIBTOOL=dlibtool'
or, for only shared libraries:
  export MAKEFLAGS='LIBTOOL=dlibtool-shared'
or, for only static libraries:
  export MAKEFLAGS='LIBTOOL=dlibtool-static'
