diff -Naur racket-6.3/src/racket/src/bool.c my-racket-6.3/src/racket/src/bool.c
--- racket-6.3/src/racket/src/bool.c	2015-10-16 17:00:55.000000000 -0400
+++ my-racket-6.3/src/racket/src/bool.c	2016-01-23 12:04:20.710628127 -0500
@@ -202,6 +202,9 @@
   return SAME_OBJ(obj1, obj2);
 }
 
+#ifdef MZ_XFORM
+START_XFORM_SKIP;
+#endif
 #ifdef MZ_LONG_DOUBLE
 XFORM_NONGCING static MZ_INLINE int mz_long_double_eqv(long_double a, long_double b)
 {
@@ -239,6 +242,10 @@
 # endif
 }
 #endif
+
+#ifdef MZ_XFORM
+START_XFORM_SKIP;
+#endif
 XFORM_NONGCING static MZ_INLINE int double_eqv(double a, double b)
 {
 # ifndef NAN_EQUALS_ANYTHING
@@ -419,6 +426,9 @@
 
  return -1;
 }
+#ifdef MZ_XFORM
+END_XFORM_SKIP;
+#endif
 
 int is_slow_equal (Scheme_Object *obj1, Scheme_Object *obj2)
 {
diff -Naur racket-6.3/src/racket/src/number.c my-racket-6.3/src/racket/src/number.c
--- racket-6.3/src/racket/src/number.c	2015-10-16 17:00:55.000000000 -0400
+++ my-racket-6.3/src/racket/src/number.c	2016-01-23 12:05:08.076767488 -0500
@@ -1917,6 +1917,9 @@
   return (is_rational(argv[0]) ? scheme_true : scheme_false);
 }
 
+#ifdef MZ_XFORM
+START_XFORM_SKIP;
+#endif
 XFORM_NONGCING static int double_is_integer(double d)
 {
 # ifdef NAN_EQUALS_ANYTHING
@@ -1943,6 +1946,9 @@
 
   return 0;
 }
+#ifdef MZ_XFORM
+END_XFORM_SKIP;
+#endif
 
 
 static Scheme_Object *
