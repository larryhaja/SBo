#!/bin/sh

# Slackware build script for Bacula

# Copyright 2010-2013, mario <mario@slackverse.org>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=bacula
VERSION=${VERSION:-5.2.13}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

# E-mail address for bacula to deliver job announcements and core dumps to
EMAIL=${EMAIL:-root@localhost}

# SMTP host for mail delivery
SMTPHOST=${SMTPHOST:-localhost}

# Build with mysql database by default, supported: postgresql/mysql/sqlite3
DATABASE=${DATABASE:-mysql}
case "$DATABASE" in
  postgresql) DATABASE="--with-postgresql" ;;
       mysql) DATABASE="--with-mysql" ;;
      sqlite) DATABASE="--with-sqlite3" ;;
           *) DATABASE="" ;;
esac

# Let people build with BAT support, which also requires Qt4 version 4.6.2
BAT=${BAT:-no}
case "$BAT" in
  yes) BAT="--enable-bat" ;;
    *) BAT="" ;;
esac

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc/bacula \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --with-scriptdir=/usr/bin \
  --with-working-dir=/var/bacula/working \
  --with-dump-email=$EMAIL \
  --with-job-email=$EMAIL \
  --with-smtp-host=$SMTPHOST \
  --disable-readline \
  $DATABASE \
  $BAT \
  --build=$ARCH-slackware-linux

# Todo: prefix, user and group
#  --sbindir=$PREFIX/bin \
#  --with-pid-dir=$PREFIX/working \
#  --with-plugindir=$PREFIX/plugins \
#  --with-scriptdir=$PREFIX/scripts \
#  --with-subsys-dir=$PREFIX/working \
#  --with-working-dir=$PREFIX/working \
#  --with-dir-user=bacula \
#  --with-sd-user=bacula \
#  --with-dir-group=bacula \
#  --with-sd-group=bacula \

make
make install DESTDIR=$PKG

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# Copy logrotate script
mkdir -p $PKG/etc/logrotate.d
cat scripts/logrotate > $PKG/etc/logrotate.d/bacula.new

# Copy init script
install -D -m0755 -oroot -groot scripts/bacula $PKG/etc/rc.d/rc.bacula.new

# Append .new to config files
for i in $PKG/etc/bacula/*.conf ; do mv $i $i.new ; done

# Remove useless tmp dir
rmdir $PKG/tmp

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  ChangeLog COPYING INSTALL README ReleaseNotes VERIFYING \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
cat $CWD/README.SLACKWARE > $PKG/usr/doc/$PRGNAM-$VERSION/README.SLACKWARE

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
