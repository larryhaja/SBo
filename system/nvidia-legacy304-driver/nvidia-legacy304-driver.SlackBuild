#!/bin/sh

# Slackware build script for nvidia-driver

# Copyright 2007-2011 Heinz Wiesinger, Amsterdam, The Netherlands
# Copyright 2011-2013 Edward W. koenig, Vancouver, WA, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Thanks to Robby Workman for suggestions to improve this script.
#
# ChangeLog
# ------------------------------------------------------------------------------
# 1.0	20-MAR-2011	New Maintainer: Edward W. Koenig <kingbeowulf@gmail.com>
# 1.1	10-APR-2011	updated to new version, testing 13.37rc4.6692
# 1.2   27-MAY-2011	new version, allow multilib option, minor edits
# 1.2.1 20-JUNE-2011	minor edits, thanks to Robby and Roberto
# 1.5	01-JULY-2011	new version, single driver download, add switch to select
#			pure x86_64 or x86_64 with 32-bit compatibility.
# 1.6	27-AUG-2011	version bump, minor edits
# 1.7	21-OCT-2011	version bump
# 1.8   24-MAR-2012	version bump, fix to nvidia-switch thanks to Phill W.
# 1.9   02-AUG-2012	version bmp, fixes, updates, nvidia-switch for install/uninstall only
# 3.0	06-JUL-2013     Legacy 304 branch, removed 32-bit compatibility
# 3.1   22-SEP-2013	version update
# 3.1a	04-NOV-2013	minor fixes for 14.1 release

PRGNAM=nvidia-legacy304-driver
VERSION=304.108
MVERS=304
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  TARGET="x86"
  LIBDIRSUFFIX=""
  COMPAT32=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  TARGET="x86"
  LIBDIRSUFFIX=""
  COMPAT32=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  TARGET="x86_64"
  LIBDIRSUFFIX="64"
  COMPAT32="-no-compat32"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
  COMPAT32=""
fi

SRCNAM=NVIDIA-Linux-$TARGET-${VERSION}$COMPAT32

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf nvidia-installer-$VERSION
tar xvf $CWD/nvidia-installer-$VERSION.tar.bz2
rm -rf nvidia-settings-$VERSION
tar xvf $CWD/nvidia-settings-$VERSION.tar.bz2
rm -rf nvidia-xconfig-$VERSION
tar xvf $CWD/nvidia-xconfig-$VERSION.tar.bz2
rm -rf $SRCNAM
sh $CWD/$SRCNAM.run --extract-only
cd $SRCNAM
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

mkdir -p $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules/{drivers,extensions} \
  $PKG/etc/OpenCL/vendors/ $PKG/usr/lib$LIBDIRSUFFIX/tls \
  $PKG/usr/{bin,man/man1,sbin} $PKG/usr/share/{applications,pixmaps} \
  $PKG/usr/include/GL

install -m 755 nvidia_drv.so $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules/drivers/
install -m 755 libglx.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules/extensions/libglx.so.$VERSION-nvidia
install -m 755 libGL.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/libGL.so.$VERSION-nvidia
install -m 755 libGL.la $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libOpenCL.so.1.0.0 $PKG/usr/lib$LIBDIRSUFFIX/
install -m 444 libXvMCNVIDIA.a $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libXvMCNVIDIA.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libcuda.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-opencl.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-glcore.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-wfb.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules/
install -m 755 libnvidia-cfg.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvcuvid.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-compiler.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 644 nvidia.icd $PKG/etc/OpenCL/vendors/
install -m 755 tls/libnvidia-tls.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/tls/

# For 8-series GPU if libwfb.so is missing (ie older X servers).
install -m 755 libnvidia-wfb.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules/libnvidia-wfb.so.$VERSION-nvidia

# Don't forget separate libvdpau package on SBo.
install -m 755 libvdpau_nvidia.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libvdpau_trace.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/

# symlinks
cd $PKG/usr/lib$LIBDIRSUFFIX
  for i in libcuda libnvidia-cfg libnvcuvid libXvMCNVIDIA; do
    ln -s $i.so.$VERSION $i.so.1
    ln -s $i.so.1 $i.so
  done
  ln -sf libOpenCL.so.1.0.0 libOpenCL.so.1.0
  ln -sf libOpenCL.so.1.0 libOpenCL.so.1
  ln -sf libOpenCL.so.1 libOpenCL.so
  ln -sf tls/libnvidia-tls.so.$VERSION libnvidia-tls.so.$VERSION
cd -

cd $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules
  ln -sf libnvidia-wfb.so.$VERSION libnvidia-wfb.so
cd -

# Next come the apps
for i in nvidia-smi nvidia-bug-report.sh nvidia-debugdump; do
  install -m 755 $i $PKG/usr/bin/
done

install -m 644 nvidia-smi.1.gz $PKG/usr/man/man1/

# Compiling nvidia-installer from source
cd $TMP/nvidia-installer-$VERSION
  chown -R root:root .
  find -L . \
   \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
    -o -perm 511 \) -exec chmod 755 {} \; -o \
   \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
    -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

  CFLAGS="$SLKCFLAGS" \
  LDFLAGS="-lz" \
  make

  install -m 755 _out/Linux_$TARGET/nvidia-installer $PKG/usr/bin/
  install -m 644 _out/Linux_$TARGET/nvidia-installer.1.gz $PKG/usr/man/man1/
cd -

# Compiling nvidia-settings from source
cd $TMP/nvidia-settings-$VERSION
  chown -R root:root .
  find -L . \
   \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
    -o -perm 511 \) -exec chmod 755 {} \; -o \
   \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
    -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

  cd src/libXNVCtrl
    make clean
    CFLAGS="$SLKCFLAGS" \
    make
  cd ../../

  CFLAGS="$SLKCFLAGS" \
  make

  install -m 755 src/_out/Linux_$TARGET/nvidia-settings $PKG/usr/bin/
  install -m 644 doc/_out/Linux_$TARGET/nvidia-settings.1.gz $PKG/usr/man/man1/
  install -m 644 doc/nvidia-settings.desktop $PKG/usr/share/applications/
  install -m 644 doc/nvidia-settings.png $PKG/usr/share/pixmaps/
cd ../

# Compiling nvidia-xconfig from source
cd $TMP/nvidia-xconfig-$VERSION
  chown -R root:root .
  find -L . \
   \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
    -o -perm 511 \) -exec chmod 755 {} \; -o \
   \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
    -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

  CFLAGS="$SLKCFLAGS" \
  make

  install -m 755 _out/Linux_$TARGET/nvidia-xconfig $PKG/usr/bin/
  install -m 644 _out/Linux_$TARGET/nvidia-xconfig.1.gz $PKG/usr/man/man1/
cd -

# Bash script to cleanly install (in doinst.sh) and uninstall the nvidia files
# so we don't stomp on the overlapping xorg files.
# Note: switching "on the fly" no longer supported.
install -m 0755 $CWD/nvidia-switch $PKG/usr/sbin/
sed -i s/PKGVERSION/$VERSION/g $PKG/usr/sbin/nvidia-switch
sed -i s/LIBDIRSUFFIX/$LIBDIRSUFFIX/g $PKG/usr/sbin/nvidia-switch

# These correct wrong paths
sed -i "s|__LIBGL_PATH__|/usr/lib$LIBDIRSUFFIX/|" $PKG/usr/lib$LIBDIRSUFFIX/libGL.la
sed -i "s|/usr/X11R6/lib|/usr/lib$LIBDIRSUFFIX/|" $PKG/usr/lib$LIBDIRSUFFIX/libGL.la
sed -i "s|__UTILS_PATH__|/usr/bin|" \
  $PKG/usr/share/applications/nvidia-settings.desktop
sed -i "s|__PIXMAP_PATH__|/usr/share/pixmaps|" \
  $PKG/usr/share/applications/nvidia-settings.desktop
sed -i "s|__NVIDIA_SETTINGS_DESKTOP_CATEGORIES__|Application;Settings;|" \
  $PKG/usr/share/applications/nvidia-settings.desktop

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cd $TMP/$SRCNAM
cp -a LICENSE NVIDIA_Changelog README.txt html $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/README > $PKG/usr/doc/$PRGNAM-$VERSION/README.Slackware
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
sed "s/PKGVERSION/$VERSION/g" $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$TARGET-$BUILD$TAG.${PKGTYPE:-tgz}
