#!/bin/sh

# Slackware build script for gnucash

# Copyright 2008,2009,2010,2011  Vincent Batts, vbatts@hashbangbash.com, http://hashbangbash.com/
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=gnucash
VERSION=2.4.11
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

DBI=${DBI:-false}
WEBKIT=${WEBKIT:-false}
OPT_ARGS=""

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "arm" ]; then
  SLKCFLAGS="-O2 -march=armv4t"
  LIBDIRSUFFIX=""
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

if [ ! "$DBI" = "false" ] ; then
  OPT_ARGS="--enable-dbi --with-dbi-dbd-dir=/usr/lib${LIBDIRSUFFIX}/dbd/"
  echo $0 : building with dbi enabled
  sleep 0.5
else
  OPT_ARGS="--disable-dbi"
fi
if [ ! "$WEBKIT" = "false" ] ; then
  OPT_ARGS="$OPT_ARGS --enable-webkit --with-html-engine=webkit"
  echo $0 : building with webkit enabled
  sleep 0.5
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.bz2
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# Starting with glib 2.32 it is now mandatory to
# include glib.h instead of individual headers.
patch -p1 -i $CWD/glib-single-include.patch

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --infodir=/usr/info \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --enable-python-bindings \
  --enable-ofx \
  --disable-aqbanking \
  $OPT_ARGS \
  --build=$ARCH-slackware-linux

# Cut away jobs number from the MAKEFLAGS
MAKEFLAGS=$(echo "$MAKEFLAGS" | sed "s/-j[0-999]//g")
make -j1
make install DESTDIR=$PKG

# Create the gconf defaults directory
mkdir -p $PKG/etc/gconf/gconf.xml.defaults

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  ChangeLog* README* TODO AUTHORS COPYING \
  DOCUMENTERS HACKING INSTALL LICENSE NEWS \
    $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

# handle the schemas and such (hopefully) properly
export GCONF_CONFIG_SOURCE="xml::etc/gconf/gconf.xml.defaults"
for rawname in $(find $PKG/etc/gconf/schemas -name "*.schemas") ; do
  schema=$(basename $rawname)
  cat << eof >> $PKG/install/doinst.sh
GCONF_CONFIG_SOURCE="${GCONF_CONFIG_SOURCE}" \
chroot . gconftool-2 \
  --config-source=$GCONF_CONFIG_SOURCE \
  --makefile-install-rule /etc/gconf/schemas/$schema 1>/dev/null
eof
done
for rawname in $(find $PKG/etc/gconf/schemas -name "*.entries") ; do
  entry=$(basename $rawname)
  cat << eof >> $PKG/install/doinst.sh
GCONF_CONFIG_SOURCE="${GCONF_CONFIG_SOURCE}" \
chroot . gconftool-2 --direct \
  --config-source=$GCONF_CONFIG_SOURCE \
  --load /etc/gconf/schemas/$entry 1>/dev/null
eof
done
unset GCONF_CONFIG_SOURCE

cd $PKG
/sbin/makepkg -p -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}

