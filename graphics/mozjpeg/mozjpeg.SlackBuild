#!/bin/sh

# Slackware build script for mozjpeg

# Originally written by:
# Ryan P.C. McQuen | Everett, WA | <email removed>

# Now maintained by B. Watson (yalhcru@gmail.com)

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version, with the following exception:
# the text of the GPL license may be omitted.

# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose. Compiling,
# interpreting, executing or merely reading the text of the program
# may result in lapses of consciousness and/or very being, up to and
# including the end of all existence and the Universe as we know it.
# See the GNU General Public License for more details.

# You may have received a copy of the GNU General Public License along
# with this program (most likely, a file named COPYING).  If not, see
# <http://www.gnu.org/licenses/>.

# 20180101 bkw: Update for v3.3.1. Script still works with 3.1 and 3.2,
# if you can think of a use for them.

# 20170502 bkw:
# - update for v3.2. script tested with v3.1 and still works, in case
#   upstream's updated libjpegturbo API causes a problem (just get the
#   old source, run with VERSION=3.1 in the env).
# - Note: ignore the 'error: ignoring unknown tag NASM' messages, per
#   https://sourceforge.net/p/libjpeg-turbo/mailman/message/34381375/

# 20170310 bkw:
# - take over maintenance
# - i486 => i586
# - build static lib also
# - expand README and slack-desc
# - add JAVA=yes option
# - add API=7 and API=8 options
# - BUILD=2

PRGNAM=mozjpeg
VERSION=${VERSION:-3.3.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# JAVA=yes only tested with openjdk and openjdk6. We source the profile.d
# script here in case someone's *just* installed jdk|openjdk, so they
# won't have to log out & back in to get this built. This mostly helps
# out sbopkg users.
JAVA="${JAVA:-no}"
if [ "$JAVA" = "yes" ]; then
  EXTRAOPTS="--with-java "

  # Find a JDK. Presumably a sane admin will only have one of these
  # profile scripts executable, even if he's installed all of them.
  # TODO: maybe let the user specify the JDK to use instead? I'm not
  # sure it actually matters that much ("write once, run anywhere" should
  # mean a .jar built with openjdk will run with Oracle's jdk, right? But
  # there's JNI (native code) involved...)
  for i in jdk openjdk8 openjdk openjdk6; do
    if [ -x /etc/profile.d/$i.sh ]; then
      source /etc/profile.d/$i.sh
      break
    fi
  done

  # Whichever jdk we decided to use, use its JAVA_HOME. Unfortunately
  # mozjpeg ignores the *standard* JAVA_HOME env var, so we persuade
  # it thus:
  sed -i "s,/usr/java,$JAVA_HOME,g" configure.ac
fi

autoreconf -fiv

# Maybe TODO: really, there should be a way to build multiple API versions,
# with file paths that don't clash: /opt/mozjpeg/jpeg$API/(bin|lib|include).
# However, I'd be inventing my own directory layout for this (upstream
# doesn't support it), which is kinda outside the scope of what a SlackBuild
# should do. If you *really* need this feature, email me and convince me to
# implement it (it's a lot of error-prone work, not going to do it unless
# someone actually needs it).
API="${API:-6b}"
case "$API" in
  6b) ;; # do nothing, this is the default
  7|8)  EXTRAOPTS="$EXTRAOPTS --with-jpeg$API" ;;
  *)    echo "Invalid API version, supported versions are 6b 7 8" 1>&2
        exit 1
        ;;
esac

# 20170310 bkw: This stuff needs documenting, or I'll forget why
# I did it this way.

# Leaving off all the --prefix and related options below, since the
# default prefix is already /opt/mozjpeg... though starting with 3.2,
# the man pages and docs are in $PREFIX/share/(man|doc), so use
# --mandir and --docdir. Also, to make 3.2 match the 3.1 package, need
# --datarootdir=$PREFIX to make the java classes go to $PREFIX/classes.

# Ryan's version of this script had --disable-static, but I'm leaving
# that off, because sometimes static libs are easier to deal with when
# you're linking with libraries outside the system /usr/lib(64) dir.

# The LDFLAGS gibberish below is to force the binaries in /opt/mozjpeg/bin
# to use the libraries in /opt/mozjpeg/lib(64), otherwise they use the
# system libjpeg in /usr/lib(64) which partly defeats the purpose of
# having optimized jpeg libs...


LDFLAGS="-Wl,-rpath,/opt/$PRGNAM/lib$LIBDIRSUFFIX" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  $EXTRAOPTS \
  --datarootdir=/opt/$PRGNAM \
  --mandir=/opt/$PRGNAM/man \
  --docdir=/opt/$PRGNAM/doc \
  --build=$ARCH-slackware-linux

# the java stuff chokes without -j1, everything else is OK.
if [ "$JAVA" = "yes" ]; then
  make -j1 -C java
fi

make # V=1
make install-strip DESTDIR=$PKG
gzip $PKG/opt/$PRGNAM/man/man?/*.?

# docs are installed in /opt already (except the license)
mkdir -p $PKG/usr/doc
mv $PKG/opt/$PRGNAM/doc $PKG/usr/doc/$PRGNAM-$VERSION
ln -s ../../../usr/doc/$PRGNAM-$VERSION $PKG/opt/$PRGNAM/doc
cp -a LICENSE.* $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

[ "$JAVA" = "yes" ] && cp -a java/doc $PKG/usr/doc/$PRGNAM-$VERSION/javadoc

mkdir -p $PKG/install
sed -e "s,@API@,$API," -e "s,@JAVA@,$JAVA," \
  $CWD/slack-desc > \
  $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
