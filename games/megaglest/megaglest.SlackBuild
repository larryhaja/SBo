#!/bin/sh

# Slackware build script for megaglest

# Written by Larry Hajali <larryhaj[at]gmail[dot]com>

PRGNAM=megaglest
VERSION=${VERSION:-3.7.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

# Directory names don't always follow the $PRGNAM-$VERSION convention.
SRCDIR=$(tar -tf $CWD/$PRGNAM-source-$VERSION.tar.xz | head -1)
DATADIR=$(tar -tf $CWD/$PRGNAM-data-$VERSION.tar.xz | head -1)

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCDIR
tar xvf $CWD/$PRGNAM-source-$VERSION.tar.xz
tar xvf $CWD/$PRGNAM-source-embedded-$VERSION.tar.xz
tar xvf $CWD/$PRGNAM-data-$VERSION.tar.xz -C $SRCDIR
cd $SRCDIR
find . -type l -exec rm -f '{}' \;
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# Fix version string.
sed -i "/^const string glestVersionString/ s|=.*|= \"v${VERSION}\";|" \
  source/glest_game/facilities/game_util.cpp

# Fix megaglest help2man when no X display is available. Use a wrapper
# script from upstream for Xvfb that create a temporary *fake* framebuffer
install -m 0755 -D $CWD/xvfb-run $TMP/$SRCDIR/bin/xvfb-run
export PATH="$PATH:$TMP/$SRCDIR/bin"
patch -p1 < $CWD/megaglest-3.6.0.2-help2man.patch

mkdir build
cd build
  cmake -G "Unix Makefiles" \
    -DCMAKE_INSTALL_PREFIX:PATH=/usr \
    -DWANT_SVN_STAMP=OFF \
    -DMEGAGLEST_BIN_INSTALL_PATH:PATH="games/" \
    -DMEGAGLEST_MANPAGE_INSTALL_PATH:PATH="man/man6/" \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_BUILD_TYPE=Release ..

  make VERBOSE=1
  make install DESTDIR=$PKG
cd ..

# Now install the game data
cd $DATADIR
  cmake -G "Unix Makefiles" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=Release .

  make install DESTDIR=$PKG
cd ..

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

[ -d "$PKG/usr/man" ] && gzip -9 $PKG/usr/man/man?/*.?

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  AUTHORS* CHANGELOG.txt COPYRIGHT* gnu_gpl_3.0.txt README{,.compiling-linux}.txt \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
