#!/bin/sh

# Slackware build script for sl.

# Copyright 2010  V'yacheslav Stetskevych
# Copyright 2012  Niels Horn, Rio de Janeiro, RJ, Brazil
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# revision date: 2012/01/05

PRGNAM=sl
VERSION=${VERSION:-3.03_16}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

ORIGVERSION=$(echo $VERSION | cut -d_ -f1)
PATCHLEVEL=$(echo $VERSION | cut -d_ -f2)

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$ORIGVERSION.orig
tar xvf $CWD/${PRGNAM}_$ORIGVERSION.orig.tar.gz
cd $PRGNAM-$ORIGVERSION.orig
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# Apply the debian patchset, which creates the "debian" directory
echo "Applying debian patchset..."
zcat $CWD/sl_$ORIGVERSION-$PATCHLEVEL.diff.gz | patch -p1
# Apply individual debian patches
echo "Patching project files..."
for file in debian/patches/*.dpatch; do
  patch -p1 < "$file"
done

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
LDFLAGS="-lcurses" \
make

# Manual installation follows...
mkdir -p $PKG/usr/games # binaries
cp -p sl sl-h $PKG/usr/games
( cd $PKG/usr/games; ln -s sl LS; )
mkdir -p $PKG/usr/man # man pages
( cd $PKG/usr/man
  mkdir -p man6 de/man6 de.UTF-8/man6 ja/man6 ja.UTF-8/man6
)
( cd debian/man
  cp -p man6/* $PKG/usr/man/man6/
  cp -p de/* $PKG/usr/man/de/man6/
  cp -p de.UTF-8/* $PKG/usr/man/de.UTF-8/man6/
  cp -p ja/* $PKG/usr/man/ja/man6/
  cp -p ja.UTF-8/* $PKG/usr/man/ja.UTF-8/man6/
)
# End of manual installation

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a debian/README* debian/changelog debian/copyright \
    $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
