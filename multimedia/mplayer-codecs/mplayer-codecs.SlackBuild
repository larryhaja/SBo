#!/bin/sh

# Slackware build script for mplayer-codecs

# Copyright 2006-2013  Robby Workman, Northport, Alabama, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=mplayer-codecs
VERSION=20110131
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

RPMVERS="20061022" # only needed for x86_64

case "$( uname -m )" in
  i?86) ARCH=i486 ;;
  arm*) ARCH=arm ;;
     *) ARCH=$( uname -m ) ;;
esac

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

set -e

if [ "$ARCH" = "x86_64" ] ; then
  SRCNAME=essential
  VERSION=20071007
  SRCARCH=amd64
  LIBDIRSUFFIX="64"
elif [ "$ARCH" = "i486" ]; then
  SRCNAME=all
  SRCARCH=i486
  LIBDIRSUFFIX=""
else
  printf "\n\n$ARCH is not supported...\n"
  exit 1
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

cd $TMP

if [ "$ARCH" = "x86_64" ]; then
  mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/codecs
  cd $PKG
    rpm2cpio < $CWD/mplayer-codecs-${RPMVERS}-1.${ARCH}.rpm | cpio -imdv
    rpm2cpio < $CWD/mplayer-codecs-extra-${RPMVERS}-1.${ARCH}.rpm | cpio -imdv
  cd -
  tar xf $CWD/${SRCNAME}-${SRCARCH}-${VERSION}.tar.bz2
  cp -a ${SRCNAME}-${SRCARCH}-${VERSION}/* $PKG/usr/lib${LIBDIRSUFFIX}/codecs
  rm -rf $PKG/usr/share
else
  mkdir -p $PKG/usr/lib/codecs
  tar xvf $CWD/all-$VERSION.tar.bz2
  cp -a all-$VERSION/* $PKG/usr/lib/codecs
fi

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
mv $PKG/usr/lib${LIBDIRSUFFIX}/codecs/README $PKG/usr/doc/$PRGNAM-$VERSION/README

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
chown -R root:root .
find . -type f -exec chmod 644 {} \;
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
